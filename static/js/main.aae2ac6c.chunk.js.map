{"version":3,"sources":["images/Star 1.svg","images/colored-top-1.svg","images/colored-mid-1.svg","images/colored-bottom-1.svg","images/colored-log-1.svg","images/crane.svg","App.js","reportWebVitals.js","index.js"],"names":["Layout","styled","motion","div","TreeContainer","Star","img","props","zIndex","TreeTopContainer","height","TreeMidContainer","TreeBottomContainer","TreeLog","BaseImage","Cane","top","left","rotation","InfoContainer","DateInfo","NumberContainer","Number","span","style","title","color","fontSize","desc","fontWeight","App","updateCountDownTime","currentDate","Date","sec","parseInt","state","targetDate","day","toString","padStart","hours","minutes","seconds","setState","setInterval","this","src","StarImg","whileTap","scale","transition","duration","animate","rotate","ease","loop","Infinity","TreeTopImg","CaneImg","TreeMidImg","TreeBottomImg","TreeLogImg","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aae2ac6c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Star 1.b3515b66.svg\";","export default __webpack_public_path__ + \"static/media/colored-top-1.e7320a3d.svg\";","export default __webpack_public_path__ + \"static/media/colored-mid-1.ef4ea341.svg\";","export default __webpack_public_path__ + \"static/media/colored-bottom-1.c489e371.svg\";","export default __webpack_public_path__ + \"static/media/colored-log-1.5b620cd4.svg\";","export default __webpack_public_path__ + \"static/media/crane.a2348474.svg\";","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport StarImg from \"./images/Star 1.svg\";\nimport TreeTopImg from \"./images/colored-top-1.svg\";\nimport TreeMidImg from \"./images/colored-mid-1.svg\";\nimport TreeBottomImg from \"./images/colored-bottom-1.svg\";\nimport TreeLogImg from \"./images/colored-log-1.svg\";\nimport CaneImg from \"./images/crane.svg\";\nimport { motion } from \"framer-motion\";\nconst Layout = styled(motion.div)`\n  height: 100vh;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  overflow: visible;\n  @media screen and (max-width: 768px) {\n    height: 100%;\n    flex-direction: column;\n  }\n`;\nconst TreeContainer = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  div {\n    display: flex;\n    width: 100%;\n    min-height: 70px;\n    justify-content: center;\n    position: relative;\n  }\n  img {\n    filter: drop-shadow(0 4px 4px rgba(0, 0, 0, 0.25));\n  }\n`;\nconst Star = styled(motion.img)`\n  margin-top: 15%;\n  z-index: ${(props) => props.zIndex};\n`;\nconst TreeTopContainer = styled(motion.div)`\n  top: -10px;\n  height: ${(props) => props.height}px;\n  z-index: ${(props) => props.zIndex};\n`;\nconst TreeMidContainer = styled(motion.div)`\n  top: -55px;\n  height: ${(props) => props.height}px;\n  z-index: ${(props) => props.zIndex};\n`;\nconst TreeBottomContainer = styled(motion.div)`\n  top: -100px;\n  height: ${(props) => props.height}px;\n  z-index: ${(props) => props.zIndex};\n`;\nconst TreeLog = styled(motion.img)`\n  position: relative;\n  top: -145px;\n  z-index: ${(props) => props.zIndex};\n`;\nconst BaseImage = styled.img`\n  position: relative;\n`;\nconst Cane = styled(motion.img)`\n  position: absolute;\n  top: ${(props) => props.top}%;\n  left: ${(props) => props.left}%;\n  transform: rotate(${(props) => props.rotation}deg);\n  width: 20px;\n`;\nconst InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  span {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n  }\n  @media screen and (max-width: 768px) {\n    height: 300px;\n  }\n`;\nconst DateInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\nconst NumberContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nconst Number = styled.span`\n  border-radius: 7px;\n  background-color: #243d5a;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  color: #efefef;\n  font-size: 55px;\n  padding: 10px;\n  margin: 5px;\n`;\nconst style = {\n  title: {\n    color: \"#eee\",\n    fontSize: 55,\n  },\n  desc: {\n    fontWeight: \"bold\",\n    color: \"#ccc\",\n    fontSize: 30,\n  },\n};\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      targetDate: new Date(\"2020-12-25T00:00:00\"),\n      day: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n    };\n  }\n  updateCountDownTime = () => {\n    let currentDate = new Date();\n    let sec = parseInt((this.state.targetDate - currentDate) / 1000);\n    let day = parseInt(sec / 86400)\n      .toString()\n      .padStart(2, \"0\");\n    let hours = parseInt((sec % 86400) / 3600)\n      .toString()\n      .padStart(2, \"0\");\n    let minutes = parseInt(((sec % 86400) % 3600) / 60)\n      .toString()\n      .padStart(2, \"0\");\n    let seconds = parseInt((((sec % 86400) % 3600) % 60) % 60)\n      .toString()\n      .padStart(2, \"0\");\n    this.setState({ day, hours, minutes, seconds });\n  };\n  componentDidMount() {\n    setInterval(this.updateCountDownTime, 1000);\n  }\n  render() {\n    return (\n      <Layout>\n        <TreeContainer>\n          <Star\n            src={StarImg}\n            zIndex={5}\n            whileTap={{\n              scale: 0.8,\n              transition: { duration: 0.1 },\n            }}\n          />\n          <TreeTopContainer\n            zIndex={4}\n            animate={{\n              rotate: [0, -3, 2, -2, 0],\n              transition: { ease: \"easeInOut\", duration: 9, loop: Infinity },\n            }}\n            whileTap={{\n              scale: 0.8,\n              transition: { duration: 0.1 },\n            }}\n            height={135}\n          >\n            <BaseImage src={TreeTopImg} />\n            <Cane src={CaneImg} top={38} left={45} rotation={-13} />\n          </TreeTopContainer>\n          <TreeMidContainer\n            zIndex={3}\n            animate={{\n              rotate: [0, -2, 3, -3, 0],\n              transition: { ease: \"easeInOut\", duration: 9, loop: Infinity },\n            }}\n            whileTap={{\n              scale: 0.8,\n              transition: { duration: 0.1 },\n            }}\n            height={164}\n          >\n            <BaseImage src={TreeMidImg} />\n            <Cane src={CaneImg} top={44} left={53} rotation={20} />\n          </TreeMidContainer>\n          <TreeBottomContainer\n            zIndex={2}\n            animate={{\n              rotate: [0, -1, 3, -2, 0],\n              transition: { ease: \"easeInOut\", duration: 13, loop: Infinity },\n            }}\n            whileTap={{\n              scale: 0.8,\n              transition: { duration: 0.1 },\n            }}\n            height={164}\n          >\n            <BaseImage src={TreeBottomImg} />\n            <Cane src={CaneImg} top={45} left={40} rotation={30} />\n          </TreeBottomContainer>\n          <TreeLog src={TreeLogImg} zIndex={1} />\n        </TreeContainer>\n        <InfoContainer>\n          <span style={style.title}>Christmas is coming!</span>\n          <DateInfo>\n            <NumberContainer>\n              <Number>{this.state.day}</Number>\n              <span style={style.desc}>DAY</span>\n            </NumberContainer>\n            <NumberContainer>\n              <Number>{this.state.hours}</Number>\n              <span style={style.desc}>HR</span>\n            </NumberContainer>\n            <NumberContainer>\n              <Number>{this.state.minutes}</Number>\n              <span style={style.desc}>MIN</span>\n            </NumberContainer>\n            <NumberContainer>\n              <Number>{this.state.seconds}</Number>\n              <span style={style.desc}>SEC</span>\n            </NumberContainer>\n          </DateInfo>\n        </InfoContainer>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}